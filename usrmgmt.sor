diff --git a/src/main.cpp b/src/main.cpp
index f9efc766..be0cce6c 100755
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -74,11 +74,11 @@ int main ( int argc, char** argv )
     bool         bNoAutoJackConnect          = false;
     bool         bUseTranslation             = true;
     bool         bCustomPortNumberGiven      = false;
-    bool         bPositionPortGiven          = false;
+//    bool         bPositionPortGiven          = false;
     int          iNumServerChannels          = DEFAULT_USED_NUM_CHANNELS;
     int          iCtrlMIDIChannel            = INVALID_MIDI_CH;
     quint16      iPortNumber                 = DEFAULT_PORT_NUMBER;
-    quint16      iPosPortNumber              = 0;
+//    quint16      iPosPortNumber              = 0;
     ELicenceType eLicenceType                = LT_NO_LICENCE;
     QString      strConnOnStartupAddress     = "";
     QString      strIniFileName              = "";
@@ -333,23 +333,23 @@ int main ( int argc, char** argv )
         }
 
 
-        // Fader Position start port number ------------------------------------
-        if ( GetNumericArgument ( tsConsole,
-                                  argc,
-                                  argv,
-                                  i,
-                                  "-k",
-                                  "--position",
-                                  0,
-                                  65535,
-                                  rDbleArgument ) )
-        {
-            iPosPortNumber         = static_cast<quint16> ( rDbleArgument );
-            bPositionPortGiven     = true;
-            tsConsole << "- fader positon port number: " << iPosPortNumber << endl;
-            CommandLineOptions << "--position";
-            continue;
-        }
+//         Fader Position start port number ------------------------------------
+//        if ( GetNumericArgument ( tsConsole,
+//                                  argc,
+//                                  argv,
+//                                  i,
+//                                  "-k",
+//                                  "--position",
+//                                  0,
+//                                  65535,
+//                                  rDbleArgument ) )
+//        {
+//            iPosPortNumber         = static_cast<quint16> ( rDbleArgument );
+    //            bPositionPortGiven     = true;
+//            tsConsole << "- fader positon port number: " << iPosPortNumber << endl;
+//            CommandLineOptions << "--position";
+//            continue;
+//        }
 
 
         // HTML status file ----------------------------------------------------
@@ -712,7 +712,7 @@ int main ( int argc, char** argv )
             CServer Server ( iNumServerChannels,
                              strLoggingFileName,
                              iPortNumber,
-                             iPosPortNumber,
+//                             iPosPortNumber,
                              strHTMLStatusFileName,
                              strServerName,
                              strCentralServer,
diff --git a/src/server.cpp b/src/server.cpp
index 083c4fc4..0ca1a78a 100755
--- a/src/server.cpp
+++ b/src/server.cpp
@@ -222,7 +222,7 @@ void CHighPrecisionTimer::run()
 CServer::CServer ( const int          iNewMaxNumChan,
                    const QString&     strLoggingFileName,
                    const quint16      iPortNumber,
-                   const quint16      iNewPosPortNumber,
+//                   const quint16      iNewPosPortNumber,
                    const QString&     strHTMLStatusFileName,
                    const QString&     strServerNameForHTMLStatusFile,
                    const QString&     strCentralServer,
@@ -238,7 +238,7 @@ CServer::CServer ( const int          iNewMaxNumChan,
                    const ELicenceType eNLicenceType ) :
     bUseDoubleSystemFrameSize   ( bNUseDoubleSystemFrameSize ),
     bUseMultithreading          ( bNUseMultithreading ),
-    iPosPortNumber              ( iNewPosPortNumber ),
+//    iPosPortNumber              ( iNewPosPortNumber ),
     iMaxNumChannels             ( iNewMaxNumChan ),
     Socket                      ( this, iPortNumber ),
     Logging                     ( ),
@@ -1301,6 +1301,7 @@ opus_custom_encoder_ctl ( pCurOpusEncoder, OPUS_SET_BITRATE ( CalcBitRateBitsPer
 CVector<CChannelInfo> CServer::CreateChannelList()
 {
     CVector<CChannelInfo> vecChanInfo ( 0 );
+    QString ipaddress;
 
     // look for free channels
     for ( int i = 0; i < iMaxNumChannels; i++ )
@@ -1312,6 +1313,21 @@ CVector<CChannelInfo> CServer::CreateChannelList()
                 i, // ID
                 QHostAddress ( QHostAddress::Null ).toIPv4Address(), // use invalid IP address (for privacy reason, #316)
                 vecChannels[i].GetChanInfo() ) );
+            //add user to map for fader position if not already in there.
+
+//            hostaddress = HostAdr.InetAddr.toString();
+//            storedfaderid = usernames.find(hostaddress)->second;
+//            if (storedfaderid > 0 )
+//            {
+//                iCurChanID = GetFreeChan( storedfaderid );
+//            }
+
+//            if (usernames.find()
+            vecChannels[i].CreateChatTextMes ( "Test your id is... " + QString::number(i) );
+
+//            QString name = vecChannels[i].GetName();
+//            CreateAndSendChatTextForAllConChannels(i, "Test" + name);
+//            CreateAndSendChanListForThisChan(i, );
         }
     }
 
@@ -1330,6 +1346,8 @@ void CServer::CreateAndSendChanListForAllConChannels()
         {
             // send message
             vecChannels[i].CreateConClientListMes ( vecChanInfo );
+            /*s*/ // this is where I have the
+            usernames.find("dd")->second;
         }
     }
 
@@ -1508,6 +1526,9 @@ bool CServer::PutAudioData ( const CVector<uint8_t>& vecbyRecBuf,
     bool bNewConnection = false; // init return value
     bool bChanOK        = true;  // init with ok, might be overwritten
 
+    QString hostaddress;
+    int storedfaderid;
+
     // Get channel ID ------------------------------------------------------
     // check address
     iCurChanID = FindChannel ( HostAdr );
@@ -1515,9 +1536,11 @@ bool CServer::PutAudioData ( const CVector<uint8_t>& vecbyRecBuf,
     if ( iCurChanID == INVALID_CHANNEL_ID )
     {
         // a new client is calling, look for free channel
-        if ( iPosPortNumber > 0  and HostAdr.iPort >= iPosPortNumber  and HostAdr.iPort <= ( iPosPortNumber + iMaxNumChannels ) )
+        hostaddress = HostAdr.InetAddr.toString();
+        storedfaderid = usernames.find(hostaddress)->second;
+        if (storedfaderid > 0 )
         {
-            iCurChanID = GetFreeChan( HostAdr.iPort );
+            iCurChanID = GetFreeChan( storedfaderid );
         }
         else
         {
diff --git a/src/server.h b/src/server.h
index 5d386c86..b8c4a5c5 100755
--- a/src/server.h
+++ b/src/server.h
@@ -172,7 +172,7 @@ public:
     CServer ( const int          iNewMaxNumChan,
               const QString&     strLoggingFileName,
               const quint16      iPortNumber,
-              const quint16      iNewPosPortNumber,
+//              const quint16      iNewPosPortNumber,
               const QString&     strHTMLStatusFileName,
               const QString&     strServerNameForHTMLStatusFile,
               const QString&     strCentralServer,
@@ -272,6 +272,11 @@ public:
     void SetAutoRunMinimized ( const bool NAuRuMin ) { bAutoRunMinimized = NAuRuMin; }
     bool GetAutoRunMinimized() { return bAutoRunMinimized; }
 
+    // SOR
+    std::map<QString, int> usernames;
+    std::map<char, int> faderpositions;
+
+
 protected:
     // access functions for actual channels
     bool IsConnected ( const int iChanNum )
@@ -332,7 +337,7 @@ protected:
     // copy constructor/operator
     CChannel                   vecChannels[MAX_NUM_CHANNELS];
     int                        iMaxNumChannels;
-    int                        iPosPortNumber;
+//    int                        iPosPortNumber;
     CProtocol                  ConnLessProtocol;
     QMutex                     Mutex;
     QMutex                     MutexWelcomeMessage;
